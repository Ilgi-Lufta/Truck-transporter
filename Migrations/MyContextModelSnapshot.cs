// <auto-generated />
using System;
using BioLab.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BioLab.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BioLab.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrencyUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Model")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencys");
                });

            modelBuilder.Entity("BioLab.Models.Nafta", b =>
                {
                    b.Property<int>("NaftaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BlereShiturSelect")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Cmimi")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Leke")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Litra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("RrugaId")
                        .HasColumnType("int");

                    b.HasKey("NaftaId");

                    b.HasIndex("RrugaId")
                        .IsUnique();

                    b.ToTable("Naftas");
                });

            modelBuilder.Entity("BioLab.Models.PikaShkarkimi", b =>
                {
                    b.Property<int>("PikaShkarkimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Model")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Pagesa")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PikaShkarkimiId");

                    b.ToTable("PikaShkarkimis");
                });

            modelBuilder.Entity("BioLab.Models.Rruga", b =>
                {
                    b.Property<int>("RrugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Dogana")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Fitime")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("FitimeEkstra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Model")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("NaftaPerTuShiturLitra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("NaftaShpenzuarLitra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PagesaShoferit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PikaShkarkimiId")
                        .HasColumnType("int");

                    b.Property<int>("ShoferId")
                        .HasColumnType("int");

                    b.Property<decimal>("Shpenzime")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Xhiro")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("shenime")
                        .HasColumnType("longtext");

                    b.Property<decimal>("shpenzimeEkstra")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("RrugaId");

                    b.HasIndex("PikaShkarkimiId");

                    b.HasIndex("ShoferId");

                    b.ToTable("Rrugas");
                });

            modelBuilder.Entity("BioLab.Models.Shofer", b =>
                {
                    b.Property<int>("ShoferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Model")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Pagesa")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ShoferId");

                    b.ToTable("Shofers");
                });

            modelBuilder.Entity("BioLab.Models.Nafta", b =>
                {
                    b.HasOne("BioLab.Models.Rruga", "Rruga")
                        .WithOne("Nafta")
                        .HasForeignKey("BioLab.Models.Nafta", "RrugaId");

                    b.Navigation("Rruga");
                });

            modelBuilder.Entity("BioLab.Models.Rruga", b =>
                {
                    b.HasOne("BioLab.Models.PikaShkarkimi", "PikaShkarkimi")
                        .WithMany()
                        .HasForeignKey("PikaShkarkimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioLab.Models.Shofer", "Shofer")
                        .WithMany()
                        .HasForeignKey("ShoferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PikaShkarkimi");

                    b.Navigation("Shofer");
                });

            modelBuilder.Entity("BioLab.Models.Rruga", b =>
                {
                    b.Navigation("Nafta");
                });
#pragma warning restore 612, 618
        }
    }
}
